version: "3.8"

services:
  # The Python Orchestrator Service
  brain_api:
    build:
      context: ./python_app
      dockerfile: Dockerfile
    container_name: brain_api
    hostname: brain_api
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./python_app:/usr/src/app
    ports:
      - "8001:8000"
    environment:
      - NEO4J_URI=bolt://nlse_db:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - brain_network
    depends_on:
      nlse_db:
        condition: service_healthy # <-- WAITS FOR THE HEALTHCHECK
      redis:
        condition: service_started
      logical_engine:
        condition: service_started

  # The Rust Logic Engine Service
  logical_engine:
    build:
      context: ./rust_engine
      dockerfile: Dockerfile
    container_name: logical_engine
    hostname: logical_engine
    ports:
      - "8002:8000"
    networks:
      - brain_network

  # The Primary Knowledge Graph (Long-Term Memory)
  nlse_db:
    image: neo4j:5-community
    container_name: nlse_db
    hostname: nlse_db
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_server_memory_heap_initial__size=512m
      - NEO4J_server_memory_heap_max__size=2G
    networks:
      - brain_network
    # NEW: Healthcheck to ensure Neo4j is ready before brain_api starts
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O /dev/null http://localhost:7474 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
      
  # Working & Task Memory
  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - brain_network

#... (existing services: brain_api, logical_engine, nlse_db, redis) ...

  # NEW: The monitoring stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - brain_network

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - brain_network

# ... (volumes and networks remain the same) ...

# Docker Volumes for data persistence
volumes:
  neo4j_data:
  redis_data:

# The network that allows all brain components to communicate
networks:
  brain_network:
    driver: bridge

